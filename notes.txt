
Next Steps:
    * Willkommensseite
    * Doku und Screencasts
    * UI for player/game creation
        * Open vs Closed mit ID
        * HTML/CSS statt egui
    * Tests
    * Fehlende Animationen
        * Undo?


========
Future TODOs

    * Error Handling
        * Meldung "Schön" auf canvas rendern?
        * Recovery; z.B:
            + BoardRender von board neu aufbauen lassen
            + Board von anderem Spieler holen bzw vergleichen und sich "einigen"
        * Restart button wenn recovery nicht möglich
    * Peer2Peer security
        * API key / public/private key effektiv verstecken nicht möglich
        * Obfuscation?
        * Mögliche "Attacken"
            * Cheating
                => Empfänger überprüft ob ein Zug legal ist
            * Hacking
                => Irgendetwas außer Cheating Möglich?
            * DDOS
                + Gegen Matchbox oder zugrundeliegenden Server
                + Gegen P2P Verbindung?
    * login, ELO & matchmaking
        => Extra server
            + speichert Spielerdaten
              ~ login/password
              ~ ELO
              ~ email etc?
              ~ klimbim?
            + matched Spieler nach ELO
        => ELO berechnung
    * Parallelisieren von Animationen
        * Welche Animationen lassen sich nicht parallelisieren
            * Weil Animationen aufgrund unterschiedlicher Geschwindigkeit/Verzögerung effektiv in verkehrter Reihenfolge ausgeführt werden können
                => Integritätsfehler
            * zB Undo
        * Welche lassen sich parallelisieren
            * zB Direkt aufeinanderfolgende "Place" ohne merge
            * Wenn keine Zielfelder geteilt werden (zB Places & Removes)
========
Commands
    * cargo +nightly fmt
    * cargo fix


=======

Game Events
1) "Atoms"
2) Whole "Moves", composed of Atoms

Event Consumers
1) Board (consumes atoms AND moves)
2) Matchbox/Nakama (consumes moves)
3) Render (consumes moves)

Event Producers
1) Board (produces atoms)
2) Matchbox/Nakama (produces moves)

==

Local events (clicks)
=> Board ignores gets them directly before

=> Matchbox needs to send
=> Render needs to render
=> EventBroker

Remote events (recieved via network)
=> Board needs
=> Render needs

=> Matchbox ignores

=======

Start game flow

P1 & P2 connect
P1 sends Connect(begin=false)
P2 sends Connect(begin=true)
P1 waits for P2
P2 sends NewGame(P2, P1)
P2 sends initial board setup events

P2 disconnects
P3 connects
P3 sends Connect(begin=true/false)
P3 waits for Connect or NewGame from P1
P1 sends NewGame(P2, P1)
P3 is now P2
P1 sends all game events